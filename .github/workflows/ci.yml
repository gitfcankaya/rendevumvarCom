name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  backend-build-test:
    name: Backend Build & Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Restore dependencies
        run: dotnet restore RendevumVar.sln

      - name: Build
        run: dotnet build RendevumVar.sln --configuration Release --no-restore

      - name: Run tests
        run: dotnet test RendevumVar.sln --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage"

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          files: "**/coverage.cobertura.xml"
          fail_ci_if_error: false

  frontend-build-test:
    name: Frontend Build & Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci --legacy-peer-deps

      - name: Run linter
        working-directory: ./frontend
        run: npm run lint

      - name: Run tests
        working-directory: ./frontend
        run: npm test -- --coverage --passWithNoTests

      - name: Build
        working-directory: ./frontend
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [backend-build-test, frontend-build-test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build API Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.api
          push: false
          tags: rendevumvar-api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./Dockerfile.frontend
          push: false
          tags: rendevumvar-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
